{"version":3,"sources":["./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/components/main/main.module.ts","./src/app/components/main/main-routing.module.ts"],"names":[],"mappings":"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","file":"components-main-main-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormModel} from '../../models/form.model';\nimport {DataService} from '../../services/dataService';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  form: FormModel;\n  clientForm: FormGroup;\n  validPatternNum = '^[0-9]*$';\n  validPatternAlpha = '^[А-Яа-яЁёa-zA-Z\\s]+$';\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private user: DataService, private router: Router) {\n    this._createForm();\n  }\n  ngOnInit(): void {\n  }\n  setParams(): void {\n    if (this.clientForm.valid) {\n      const surname = this.clientForm.get('surname').value;\n      const name = this.clientForm.get('name').value;\n      const adultsCount = parseInt(this.clientForm.get('adultsCount').value, 10);\n      const childrenCount = parseInt(this.clientForm.get('childrenCount').value, 10);\n      const pets = this.clientForm.get('pets').value;\n      this.form = {\n        surname,\n        name,\n        adultsCount,\n        childrenCount,\n        pets,\n        dateNow: Date.now()\n      };\n\n      this.user.userActivated.next(this.form);\n      if ((adultsCount > 0) && (adultsCount <= 40) && (childrenCount < 1) && (pets === false)) {\n        this.router.navigate(['/for-adult']).then(m => console.log('Это оно ' + m));\n      } else if ((adultsCount > 0) && (childrenCount > 0) && ((adultsCount + childrenCount) <= 40) && (pets === false)) {\n        this.router.navigate(['/for-children']);\n      } else if ((adultsCount > 0) && (adultsCount <= 40) && ((adultsCount + childrenCount) <= 40) && (pets === true)) {\n        this.router.navigate(['/with-pets']);\n      } else if (((adultsCount > 40) || ((adultsCount + childrenCount) > 40)) && (pets === false)) {\n        this.router.navigate(['/for-big-company']);\n      } else {\n        alert('Усадеб более чем на 40 персон с животными не существует!');\n      }\n    }\n  }\n  private _createForm(): void {\n    this.clientForm = this.fb.group({\n      surname: ['',\n        [\n          Validators.required,\n          Validators.maxLength(10),\n          Validators.pattern(this.validPatternAlpha)\n        ]\n      ],\n      name: ['',\n        [\n          Validators.required,\n          Validators.maxLength(10),\n          Validators.pattern(this.validPatternAlpha)\n        ]\n      ],\n      adultsCount: [\n        '',\n        [\n          Validators.required,\n          Validators.min(1),\n          Validators.max(60),\n          Validators.pattern(this.validPatternNum)\n        ]\n      ],\n      childrenCount: [\n        '',\n        [\n          Validators.required,\n          Validators.min(0),\n          Validators.max(20),\n          Validators.pattern(this.validPatternNum)\n        ]\n      ],\n      pets: [false, Validators.nullValidator]\n    });\n  }\n  // tslint:disable-next-line:typedef\n  get _surname() {\n    return this.clientForm.get('surname');\n  }\n  // tslint:disable-next-line:typedef\n  get _name() {\n    return this.clientForm.get('name');\n  }\n  // tslint:disable-next-line:typedef\n  get _adultsCount() {\n    return this.clientForm.get('adultsCount');\n  }\n  // tslint:disable-next-line:typedef\n  get _childrenCount() {\n    return this.clientForm.get('childrenCount');\n  }\n  // tslint:disable-next-line:typedef\n  get _pets() {\n    return this.clientForm.get('pets');\n  }\n}\n","<form [formGroup]=\"clientForm\" novalidate>\n  <label for=\"surname\">Фамилия\n    <input formControlName=\"surname\"\n           name=\"surname\"\n           type=\"text\"\n           id=\"surname\"\n           placeholder=\"Иванов\"\n           maxlength=\"10\"\n           [ngStyle]=\"{\n           'border': _surname.invalid && (_surname.touched || _surname.dirty)\n           ? '2px red solid': ''\n           }\"\n    >\n    <div class=\"required\"\n      *ngIf=\"_surname.invalid && (_surname.touched || _surname.dirty)\"\n    >\n      <span *ngIf=\"_surname.errors?.required\"\n      >Обязательное поле</span\n      >\n      <span\n        *ngIf=\"_surname.errors?.pattern\"\n      >Разрешаются только буквы.</span\n      >\n    </div>\n  </label>\n  <label for=\"name\">Имя\n    <input formControlName=\"name\"\n           name=\"name\"\n           type=\"text\"\n           id=\"name\"\n           placeholder=\"Иван\"\n           maxlength=\"10\"\n           [ngStyle]=\"{\n           'border': _name.invalid && (_name.touched || _name.dirty)\n           ? '2px red solid' : ''\n           }\"\n    >\n    <div class=\"required\"\n      *ngIf=\"_name.invalid && (_name.touched || _name.dirty)\"\n    >\n      <span *ngIf=\"_name.errors?.required\"\n      >Обязательное поле</span\n      >\n      <span\n        *ngIf=\"_name.errors?.pattern\"\n      >Разрешаются только буквы.</span\n      >\n    </div>\n  </label>\n  <label for=\"adultsCount\">Количество взрослых\n    <input formControlName=\"adultsCount\"\n           name=\"adultsCount\"\n           type=\"text\"\n           id=\"adultsCount\"\n           placeholder=\"Кол-во взрослых\"\n           maxlength=\"2\"\n           [ngStyle]=\"{\n           'border': _adultsCount.invalid && (_adultsCount.touched || _adultsCount.dirty)\n           ? '2px red solid' : ''\n           }\"\n    >\n    <div class=\"required\"\n      *ngIf=\"_adultsCount.invalid && (_adultsCount.touched || _adultsCount.dirty)\"\n    >\n      <span *ngIf=\"_adultsCount.errors?.required\"\n      >Обязательное поле</span\n      >\n      <span *ngIf=\"_adultsCount.errors?.min\"\n      >Значение должно быть больше или равно\n        {{_adultsCount.errors?.min.min}}</span\n      >\n      <span\n        *ngIf=\"_adultsCount.errors?.pattern\"\n      >Разрешаются только цифры.</span\n      >\n      <span\n        *ngIf=\"_adultsCount.errors?.max\"\n      >Количество человек не более: {{_adultsCount.errors?.max.max}}</span\n      >\n    </div>\n  </label>\n  <label for=\"childrenCount\">Количество детей\n    <input formControlName=\"childrenCount\"\n           name=\"childrenCount\"\n           type=\"text\"\n           id=\"childrenCount\"\n           placeholder=\"Кол-во детей\"\n           maxlength=\"2\"\n           [ngStyle]=\"{\n           'border': _childrenCount.invalid && (_childrenCount.touched || _childrenCount.dirty)\n           ? '2px red solid' : ''\n           }\"\n    >\n    <div class=\"required\"\n      *ngIf=\"_childrenCount.invalid && (_childrenCount.touched || _childrenCount.dirty)\"\n    >\n      <span *ngIf=\"_childrenCount.errors?.required\"\n      >Обязательное поле</span\n      >\n      <span *ngIf=\"_childrenCount.errors?.min\"\n      >Значение должно быть больше или равно\n        {{_childrenCount.errors?.min.min}}</span\n      >\n      <span\n        *ngIf=\"_childrenCount.errors?.pattern\"\n      >Разрешаются только цифры.</span\n      >\n      <span\n        *ngIf=\"_childrenCount.errors?.max\"\n      >Количество детей не более: {{_childrenCount.errors?.max.max}}</span\n      >\n    </div>\n  </label>\n    <input formControlName=\"pets\"\n           name=\"pets\"\n           type=\"checkbox\"\n           id=\"pets\"\n           class=\"checkbox\"\n    >\n  <label for=\"pets\">С животными</label>\n  <button class=\"button\" (click)=\"setParams()\" [disabled]=\"clientForm.invalid\">\n    <span class=\"btn\">Подобрать</span>\n  </button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { MainComponent } from './main.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    MainComponent\n  ],\n  imports: [\n    CommonModule,\n    MainRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class MainModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './main.component';\n\nconst routes: Routes = [{ path: '', component: MainComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n"],"sourceRoot":"webpack:///"}